{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XUW3b5LzyAfS"
      },
      "source": [
        "## **IMPORT LIBRARIES**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "id": "2DhPVELCX3yi"
      },
      "outputs": [],
      "source": [
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)          \n",
        "import matplotlib.pyplot as plt # visualization\n",
        "# plt.rcParams.update({'font.size': 14})\n",
        "import seaborn as sns # visualization\n",
        "import math \n",
        "import warnings # Supress warnings \n",
        "warnings.filterwarnings('ignore')\n",
        "from keras.models import Sequential \n",
        "from keras.layers import Activation, Dense , Concatenate,BatchNormalization  "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "rq4rekEHirzk"
      },
      "outputs": [],
      "source": [
        "import keras\n",
        "from tensorflow.python.keras.models import Input\n",
        "from keras.layers import Dense, Dropout, Flatten\n",
        "from keras.layers import Conv2D, MaxPooling2D\n",
        "from keras.layers import ELU, PReLU, LeakyReLU\n",
        "import tensorflow \n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "import keras.layers as layers\n",
        "\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "from tensorflow.keras import Model\n",
        "\n",
        "from tensorflow.keras.utils import plot_model\n",
        "from tensorflow.keras.layers import Input, Dense, BatchNormalization\n",
        "from IPython.core.display import Image"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "UmY5c_Prk8wf"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, Conv2D , MaxPool2D , Flatten , Dropout \n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "\n",
        "from sklearn.metrics import classification_report,confusion_matrix\n",
        "\n",
        "import tensorflow as tf\n",
        "import argparse\n",
        "import imutils\n",
        "import cv2\n",
        "import os\n",
        "\n",
        "import numpy as np\n",
        "from numpy import asarray\n",
        "from sklearn.preprocessing import StandardScaler"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "boN4rE-3yRuz"
      },
      "source": [
        "## **READING THE DATA**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {},
      "outputs": [],
      "source": [
        "test_drive_df= pd.read_csv('/home/ahmed/queens_project/final_project/full_data.csv' ) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZkY8wI8g4xS7",
        "outputId": "4fcc95f0-5fa2-4c62-bdb2-d1f6a15f1a02"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rec_Lat</th>\n",
              "      <th>Rec_Long</th>\n",
              "      <th>RSRP</th>\n",
              "      <th>serving_Lat</th>\n",
              "      <th>serving_Long</th>\n",
              "      <th>distance</th>\n",
              "      <th>Bearing_angle</th>\n",
              "      <th>PL</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>30.01471</td>\n",
              "      <td>31.45804</td>\n",
              "      <td>-66.5625</td>\n",
              "      <td>30.010772</td>\n",
              "      <td>31.456667</td>\n",
              "      <td>0.456179</td>\n",
              "      <td>-163.196082</td>\n",
              "      <td>121.064588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>30.01472</td>\n",
              "      <td>31.45804</td>\n",
              "      <td>-66.5625</td>\n",
              "      <td>30.010772</td>\n",
              "      <td>31.456667</td>\n",
              "      <td>0.457239</td>\n",
              "      <td>-163.236257</td>\n",
              "      <td>121.099297</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>30.01472</td>\n",
              "      <td>31.45805</td>\n",
              "      <td>-66.5625</td>\n",
              "      <td>30.010772</td>\n",
              "      <td>31.456667</td>\n",
              "      <td>0.457520</td>\n",
              "      <td>-163.121105</td>\n",
              "      <td>121.108460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>30.01472</td>\n",
              "      <td>31.45806</td>\n",
              "      <td>-66.8125</td>\n",
              "      <td>30.010772</td>\n",
              "      <td>31.456667</td>\n",
              "      <td>0.457802</td>\n",
              "      <td>-163.006094</td>\n",
              "      <td>121.117678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>30.01472</td>\n",
              "      <td>31.45807</td>\n",
              "      <td>-67.3125</td>\n",
              "      <td>30.010772</td>\n",
              "      <td>31.456667</td>\n",
              "      <td>0.458086</td>\n",
              "      <td>-162.891224</td>\n",
              "      <td>121.126951</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Rec_Lat  Rec_Long     RSRP  serving_Lat  serving_Long  distance  \\\n",
              "0  30.01471  31.45804 -66.5625    30.010772     31.456667  0.456179   \n",
              "1  30.01472  31.45804 -66.5625    30.010772     31.456667  0.457239   \n",
              "2  30.01472  31.45805 -66.5625    30.010772     31.456667  0.457520   \n",
              "3  30.01472  31.45806 -66.8125    30.010772     31.456667  0.457802   \n",
              "4  30.01472  31.45807 -67.3125    30.010772     31.456667  0.458086   \n",
              "\n",
              "   Bearing_angle          PL  \n",
              "0    -163.196082  121.064588  \n",
              "1    -163.236257  121.099297  \n",
              "2    -163.121105  121.108460  \n",
              "3    -163.006094  121.117678  \n",
              "4    -162.891224  121.126951  "
            ]
          },
          "execution_count": 18,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test_drive_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "9nMhDWqOMpfT",
        "outputId": "65991ac1-d3c4-4a30-a29d-524cda08c271"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# correlation plot\n",
        "corr = test_drive_df.corr()\n",
        "sns.heatmap(corr, cmap = 'Wistia', annot= True);"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UyhiyJHUB-Cp",
        "outputId": "b8b0b6f6-19e1-497e-982e-2c78ce246f40"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Rec_Lat          0\n",
              "Rec_Long         0\n",
              "RSRP             0\n",
              "serving_Lat      0\n",
              "serving_Long     0\n",
              "distance         0\n",
              "Bearing_angle    0\n",
              "PL               0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 20,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test_drive_df.isnull().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## **Split Dataset**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "zqil5Ms7An-3"
      },
      "outputs": [],
      "source": [
        "y= test_drive_df['RSRP']\n",
        "x=test_drive_df.drop(columns=\"RSRP\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {},
      "outputs": [],
      "source": [
        "# define standard scaler\n",
        "scaler = StandardScaler()\n",
        "# transform data\n",
        "scaled = scaler.fit_transform(x)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "j30qlDiVQgqc"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "train_X, val_X, train_y, val_y = train_test_split(scaled, y, test_size = 0.25, random_state = 10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "tppRXJRCSY89",
        "outputId": "7ce1524e-6d06-43ec-a40e-ac919cc839f0"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "((64733, 7), (21578, 7), (64733,), (21578,))"
            ]
          },
          "execution_count": 24,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train_X.shape , val_X.shape , train_y.shape , val_y.shape  # type: ignoree"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tkqnYq8LAkMg"
      },
      "source": [
        "# **Numerical Model**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "50DOTGDhPiUr"
      },
      "outputs": [],
      "source": [
        "y_size,x_size = test_drive_df.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "uaz1N4BaMwGc"
      },
      "outputs": [],
      "source": [
        "model = Sequential()\n",
        "model.add(Dense(x_size,activation='relu')) # x_size - 64 - 64 - 128 - 64 - 64 - x_size\n",
        "model.add(Dense(64,activation='relu'))\n",
        "model.add(Dense(64,activation='relu'))\n",
        "model.add(Dense(128,activation='relu'))\n",
        "model.add(Dense(64,activation='relu'))\n",
        "model.add(Dense(64,activation='relu'))\n",
        "model.add(Dense(x_size,activation='relu'))\n",
        "model.add(Dense(1)) # since we want only one feature as outcome (price) I added 1 as last dense"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "OCBYK6D0PT77"
      },
      "outputs": [],
      "source": [
        "model.compile(optimizer='adam',loss='mae') #optimizer is adam and loss f is mean absolute error"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "q7zXz7g4QQO7"
      },
      "outputs": [],
      "source": [
        "class myCallback(tf.keras.callbacks.Callback):\n",
        "    def on_epoch_end(self, epoch, logs={}):\n",
        "        if(logs.get('loss')<0) and (logs.get('val_loss')<0):\n",
        "            print('\\n reached enough loss so stopping training') # to stop my model I used a custom callback\n",
        "            self.model.stop_training = True\n",
        "callbacks = myCallback() # callback olarak bu class tanımlandı"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EqiCXi-FQVNs",
        "outputId": "50997235-6e68-4f42-c68c-94bfbd2036a4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/250\n",
            "506/506 [==============================] - 4s 6ms/step - loss: 13.3737 - val_loss: 6.6424 - lr: 0.0010\n",
            "Epoch 2/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 6.5320 - val_loss: 6.6032 - lr: 0.0010\n",
            "Epoch 3/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 6.2875 - val_loss: 6.0246 - lr: 0.0010\n",
            "Epoch 4/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 6.1572 - val_loss: 5.8698 - lr: 0.0010\n",
            "Epoch 5/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 5.9685 - val_loss: 5.7807 - lr: 0.0010\n",
            "Epoch 6/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 5.7792 - val_loss: 5.5473 - lr: 0.0010\n",
            "Epoch 7/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 5.6239 - val_loss: 5.4237 - lr: 0.0010\n",
            "Epoch 8/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 5.5465 - val_loss: 5.2824 - lr: 0.0010\n",
            "Epoch 9/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 5.3657 - val_loss: 5.2747 - lr: 0.0010\n",
            "Epoch 10/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 5.2770 - val_loss: 5.0190 - lr: 0.0010\n",
            "Epoch 11/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 5.1443 - val_loss: 4.9586 - lr: 0.0010\n",
            "Epoch 12/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 5.1195 - val_loss: 4.9022 - lr: 0.0010\n",
            "Epoch 13/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 5.0105 - val_loss: 5.0866 - lr: 0.0010\n",
            "Epoch 14/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.9837 - val_loss: 4.7956 - lr: 0.0010\n",
            "Epoch 15/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.9508 - val_loss: 4.8852 - lr: 0.0010\n",
            "Epoch 16/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.8754 - val_loss: 4.8961 - lr: 0.0010\n",
            "Epoch 17/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.8040 - val_loss: 4.6177 - lr: 0.0010\n",
            "Epoch 18/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 4.8036 - val_loss: 5.0652 - lr: 0.0010\n",
            "Epoch 19/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.7545 - val_loss: 4.6312 - lr: 0.0010\n",
            "Epoch 20/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 4.7127 - val_loss: 4.5505 - lr: 0.0010\n",
            "Epoch 21/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.7438 - val_loss: 4.6609 - lr: 0.0010\n",
            "Epoch 22/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.6368 - val_loss: 4.6338 - lr: 0.0010\n",
            "Epoch 23/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.5933 - val_loss: 4.5851 - lr: 0.0010\n",
            "Epoch 24/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 4.6019 - val_loss: 4.8667 - lr: 0.0010\n",
            "Epoch 25/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.5481 - val_loss: 4.5854 - lr: 0.0010\n",
            "Epoch 26/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.5543 - val_loss: 4.5291 - lr: 0.0010\n",
            "Epoch 27/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 4.5026 - val_loss: 4.5332 - lr: 0.0010\n",
            "Epoch 28/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.4623 - val_loss: 4.5535 - lr: 0.0010\n",
            "Epoch 29/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.4134 - val_loss: 4.5539 - lr: 0.0010\n",
            "Epoch 30/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.3272 - val_loss: 4.1689 - lr: 0.0010\n",
            "Epoch 31/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.3643 - val_loss: 4.1789 - lr: 0.0010\n",
            "Epoch 32/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.3333 - val_loss: 4.8228 - lr: 0.0010\n",
            "Epoch 33/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.2693 - val_loss: 4.1636 - lr: 0.0010\n",
            "Epoch 34/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.2655 - val_loss: 4.2120 - lr: 0.0010\n",
            "Epoch 35/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.1942 - val_loss: 4.1160 - lr: 0.0010\n",
            "Epoch 36/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.1711 - val_loss: 4.6913 - lr: 0.0010\n",
            "Epoch 37/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 4.1582 - val_loss: 4.0312 - lr: 0.0010\n",
            "Epoch 38/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.1151 - val_loss: 3.9283 - lr: 0.0010\n",
            "Epoch 39/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.1203 - val_loss: 3.9849 - lr: 0.0010\n",
            "Epoch 40/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 4.0115 - val_loss: 3.9112 - lr: 0.0010\n",
            "Epoch 41/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.0263 - val_loss: 4.1013 - lr: 0.0010\n",
            "Epoch 42/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 4.0264 - val_loss: 4.1201 - lr: 0.0010\n",
            "Epoch 43/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.9173 - val_loss: 3.9058 - lr: 0.0010\n",
            "Epoch 44/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.9931 - val_loss: 3.7940 - lr: 0.0010\n",
            "Epoch 45/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.9446 - val_loss: 3.7726 - lr: 0.0010\n",
            "Epoch 46/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.8668 - val_loss: 3.7937 - lr: 0.0010\n",
            "Epoch 47/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.9083 - val_loss: 4.2725 - lr: 0.0010\n",
            "Epoch 48/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.9113 - val_loss: 4.1582 - lr: 0.0010\n",
            "Epoch 49/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.8473 - val_loss: 3.8538 - lr: 0.0010\n",
            "Epoch 50/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.8702 - val_loss: 3.8734 - lr: 0.0010\n",
            "Epoch 51/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.8503 - val_loss: 4.3998 - lr: 0.0010\n",
            "Epoch 52/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.8112 - val_loss: 3.6786 - lr: 0.0010\n",
            "Epoch 53/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.7715 - val_loss: 3.5750 - lr: 0.0010\n",
            "Epoch 54/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.7552 - val_loss: 3.7693 - lr: 0.0010\n",
            "Epoch 55/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.7116 - val_loss: 3.6123 - lr: 0.0010\n",
            "Epoch 56/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.7261 - val_loss: 3.6707 - lr: 0.0010\n",
            "Epoch 57/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.7399 - val_loss: 3.8350 - lr: 0.0010\n",
            "Epoch 58/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.7194 - val_loss: 3.4908 - lr: 0.0010\n",
            "Epoch 59/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.6606 - val_loss: 3.8251 - lr: 0.0010\n",
            "Epoch 60/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.6633 - val_loss: 3.5112 - lr: 0.0010\n",
            "Epoch 61/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.6331 - val_loss: 3.5435 - lr: 0.0010\n",
            "Epoch 62/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.6182 - val_loss: 3.6911 - lr: 0.0010\n",
            "Epoch 63/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.6244 - val_loss: 3.5324 - lr: 0.0010\n",
            "Epoch 64/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.5902 - val_loss: 3.7825 - lr: 0.0010\n",
            "Epoch 65/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.5626 - val_loss: 3.3719 - lr: 0.0010\n",
            "Epoch 66/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.5880 - val_loss: 3.4009 - lr: 0.0010\n",
            "Epoch 67/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.5593 - val_loss: 3.4622 - lr: 0.0010\n",
            "Epoch 68/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.5190 - val_loss: 4.1990 - lr: 0.0010\n",
            "Epoch 69/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.5200 - val_loss: 3.4612 - lr: 0.0010\n",
            "Epoch 70/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.5465 - val_loss: 3.6206 - lr: 0.0010\n",
            "Epoch 71/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.4626 - val_loss: 3.3377 - lr: 0.0010\n",
            "Epoch 72/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.4767 - val_loss: 3.3883 - lr: 0.0010\n",
            "Epoch 73/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.4592 - val_loss: 3.5243 - lr: 0.0010\n",
            "Epoch 74/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.4155 - val_loss: 3.4222 - lr: 0.0010\n",
            "Epoch 75/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.4458 - val_loss: 3.2672 - lr: 0.0010\n",
            "Epoch 76/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.4417 - val_loss: 3.5521 - lr: 0.0010\n",
            "Epoch 77/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.3997 - val_loss: 3.3482 - lr: 0.0010\n",
            "Epoch 78/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3969 - val_loss: 3.2720 - lr: 0.0010\n",
            "Epoch 79/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.4005 - val_loss: 3.3004 - lr: 0.0010\n",
            "Epoch 80/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3536 - val_loss: 3.8801 - lr: 0.0010\n",
            "Epoch 81/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.3387 - val_loss: 3.2082 - lr: 0.0010\n",
            "Epoch 82/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3547 - val_loss: 3.3536 - lr: 0.0010\n",
            "Epoch 83/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3151 - val_loss: 3.1634 - lr: 0.0010\n",
            "Epoch 84/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3387 - val_loss: 3.2277 - lr: 0.0010\n",
            "Epoch 85/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.3155 - val_loss: 3.2056 - lr: 0.0010\n",
            "Epoch 86/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.2884 - val_loss: 3.1042 - lr: 0.0010\n",
            "Epoch 87/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2634 - val_loss: 3.4954 - lr: 0.0010\n",
            "Epoch 88/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.2651 - val_loss: 3.4720 - lr: 0.0010\n",
            "Epoch 89/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2171 - val_loss: 3.4783 - lr: 0.0010\n",
            "Epoch 90/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.2365 - val_loss: 3.3208 - lr: 0.0010\n",
            "Epoch 91/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2734 - val_loss: 3.1260 - lr: 0.0010\n",
            "Epoch 92/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.2381 - val_loss: 3.2368 - lr: 0.0010\n",
            "Epoch 93/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2207 - val_loss: 3.0868 - lr: 0.0010\n",
            "Epoch 94/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.1762 - val_loss: 3.5523 - lr: 0.0010\n",
            "Epoch 95/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2155 - val_loss: 3.2251 - lr: 0.0010\n",
            "Epoch 96/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.2070 - val_loss: 3.1399 - lr: 0.0010\n",
            "Epoch 97/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.1396 - val_loss: 3.0438 - lr: 0.0010\n",
            "Epoch 98/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.1512 - val_loss: 3.0103 - lr: 0.0010\n",
            "Epoch 99/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.1236 - val_loss: 3.1818 - lr: 0.0010\n",
            "Epoch 100/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.1112 - val_loss: 3.1264 - lr: 0.0010\n",
            "Epoch 101/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.0916 - val_loss: 3.1396 - lr: 0.0010\n",
            "Epoch 102/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.1220 - val_loss: 2.9884 - lr: 0.0010\n",
            "Epoch 103/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.0991 - val_loss: 2.9115 - lr: 0.0010\n",
            "Epoch 104/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.0700 - val_loss: 3.1042 - lr: 0.0010\n",
            "Epoch 105/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.0579 - val_loss: 3.0833 - lr: 0.0010\n",
            "Epoch 106/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.0510 - val_loss: 2.9674 - lr: 0.0010\n",
            "Epoch 107/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.0466 - val_loss: 3.0383 - lr: 0.0010\n",
            "Epoch 108/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 3.0562 - val_loss: 3.2831 - lr: 0.0010\n",
            "Epoch 109/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 3.0511 - val_loss: 3.0231 - lr: 0.0010\n",
            "Epoch 110/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.9769 - val_loss: 3.0148 - lr: 0.0010\n",
            "Epoch 111/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 3.0175 - val_loss: 3.3077 - lr: 0.0010\n",
            "Epoch 112/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.9949 - val_loss: 3.1326 - lr: 0.0010\n",
            "Epoch 113/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.9943 - val_loss: 2.9155 - lr: 0.0010\n",
            "Epoch 114/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.6134 - val_loss: 2.6022 - lr: 1.0000e-04\n",
            "Epoch 115/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.5825 - val_loss: 2.6168 - lr: 1.0000e-04\n",
            "Epoch 116/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5749 - val_loss: 2.5870 - lr: 1.0000e-04\n",
            "Epoch 117/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.5744 - val_loss: 2.6032 - lr: 1.0000e-04\n",
            "Epoch 118/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5618 - val_loss: 2.5659 - lr: 1.0000e-04\n",
            "Epoch 119/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5537 - val_loss: 2.5623 - lr: 1.0000e-04\n",
            "Epoch 120/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5537 - val_loss: 2.5804 - lr: 1.0000e-04\n",
            "Epoch 121/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5481 - val_loss: 2.5559 - lr: 1.0000e-04\n",
            "Epoch 122/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5452 - val_loss: 2.5497 - lr: 1.0000e-04\n",
            "Epoch 123/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5364 - val_loss: 2.6024 - lr: 1.0000e-04\n",
            "Epoch 124/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5389 - val_loss: 2.5435 - lr: 1.0000e-04\n",
            "Epoch 125/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5347 - val_loss: 2.5429 - lr: 1.0000e-04\n",
            "Epoch 126/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5302 - val_loss: 2.5568 - lr: 1.0000e-04\n",
            "Epoch 127/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5253 - val_loss: 2.5366 - lr: 1.0000e-04\n",
            "Epoch 128/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5193 - val_loss: 2.5270 - lr: 1.0000e-04\n",
            "Epoch 129/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5242 - val_loss: 2.5189 - lr: 1.0000e-04\n",
            "Epoch 130/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5172 - val_loss: 2.5428 - lr: 1.0000e-04\n",
            "Epoch 131/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5153 - val_loss: 2.5168 - lr: 1.0000e-04\n",
            "Epoch 132/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.5158 - val_loss: 2.5351 - lr: 1.0000e-04\n",
            "Epoch 133/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.5120 - val_loss: 2.5181 - lr: 1.0000e-04\n",
            "Epoch 134/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5090 - val_loss: 2.5404 - lr: 1.0000e-04\n",
            "Epoch 135/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5009 - val_loss: 2.5272 - lr: 1.0000e-04\n",
            "Epoch 136/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.5010 - val_loss: 2.5227 - lr: 1.0000e-04\n",
            "Epoch 137/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4972 - val_loss: 2.5080 - lr: 1.0000e-04\n",
            "Epoch 138/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4967 - val_loss: 2.5050 - lr: 1.0000e-04\n",
            "Epoch 139/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4954 - val_loss: 2.5222 - lr: 1.0000e-04\n",
            "Epoch 140/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4918 - val_loss: 2.5143 - lr: 1.0000e-04\n",
            "Epoch 141/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4903 - val_loss: 2.5020 - lr: 1.0000e-04\n",
            "Epoch 142/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4848 - val_loss: 2.5059 - lr: 1.0000e-04\n",
            "Epoch 143/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4846 - val_loss: 2.5192 - lr: 1.0000e-04\n",
            "Epoch 144/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4860 - val_loss: 2.5098 - lr: 1.0000e-04\n",
            "Epoch 145/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4776 - val_loss: 2.4958 - lr: 1.0000e-04\n",
            "Epoch 146/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4820 - val_loss: 2.4931 - lr: 1.0000e-04\n",
            "Epoch 147/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4733 - val_loss: 2.5011 - lr: 1.0000e-04\n",
            "Epoch 148/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4770 - val_loss: 2.5187 - lr: 1.0000e-04\n",
            "Epoch 149/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4703 - val_loss: 2.4804 - lr: 1.0000e-04\n",
            "Epoch 150/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4712 - val_loss: 2.5009 - lr: 1.0000e-04\n",
            "Epoch 151/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4691 - val_loss: 2.4911 - lr: 1.0000e-04\n",
            "Epoch 152/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4697 - val_loss: 2.5032 - lr: 1.0000e-04\n",
            "Epoch 153/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4645 - val_loss: 2.4739 - lr: 1.0000e-04\n",
            "Epoch 154/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4668 - val_loss: 2.4761 - lr: 1.0000e-04\n",
            "Epoch 155/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4567 - val_loss: 2.4715 - lr: 1.0000e-04\n",
            "Epoch 156/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4559 - val_loss: 2.4678 - lr: 1.0000e-04\n",
            "Epoch 157/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4589 - val_loss: 2.4918 - lr: 1.0000e-04\n",
            "Epoch 158/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4626 - val_loss: 2.4878 - lr: 1.0000e-04\n",
            "Epoch 159/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4565 - val_loss: 2.4956 - lr: 1.0000e-04\n",
            "Epoch 160/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4511 - val_loss: 2.4886 - lr: 1.0000e-04\n",
            "Epoch 161/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4509 - val_loss: 2.4645 - lr: 1.0000e-04\n",
            "Epoch 162/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4544 - val_loss: 2.4572 - lr: 1.0000e-04\n",
            "Epoch 163/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4477 - val_loss: 2.4628 - lr: 1.0000e-04\n",
            "Epoch 164/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4520 - val_loss: 2.5409 - lr: 1.0000e-04\n",
            "Epoch 165/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4423 - val_loss: 2.4666 - lr: 1.0000e-04\n",
            "Epoch 166/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4432 - val_loss: 2.4820 - lr: 1.0000e-04\n",
            "Epoch 167/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4432 - val_loss: 2.4784 - lr: 1.0000e-04\n",
            "Epoch 168/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4434 - val_loss: 2.4609 - lr: 1.0000e-04\n",
            "Epoch 169/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4369 - val_loss: 2.4494 - lr: 1.0000e-04\n",
            "Epoch 170/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4389 - val_loss: 2.4523 - lr: 1.0000e-04\n",
            "Epoch 171/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4381 - val_loss: 2.4601 - lr: 1.0000e-04\n",
            "Epoch 172/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4388 - val_loss: 2.4753 - lr: 1.0000e-04\n",
            "Epoch 173/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4409 - val_loss: 2.4537 - lr: 1.0000e-04\n",
            "Epoch 174/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4320 - val_loss: 2.4600 - lr: 1.0000e-04\n",
            "Epoch 175/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4337 - val_loss: 2.4421 - lr: 1.0000e-04\n",
            "Epoch 176/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4289 - val_loss: 2.4564 - lr: 1.0000e-04\n",
            "Epoch 177/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4307 - val_loss: 2.4602 - lr: 1.0000e-04\n",
            "Epoch 178/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4261 - val_loss: 2.4522 - lr: 1.0000e-04\n",
            "Epoch 179/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4310 - val_loss: 2.4370 - lr: 1.0000e-04\n",
            "Epoch 180/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4195 - val_loss: 2.4509 - lr: 1.0000e-04\n",
            "Epoch 181/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4233 - val_loss: 2.4280 - lr: 1.0000e-04\n",
            "Epoch 182/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4242 - val_loss: 2.4298 - lr: 1.0000e-04\n",
            "Epoch 183/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4169 - val_loss: 2.4380 - lr: 1.0000e-04\n",
            "Epoch 184/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4216 - val_loss: 2.4661 - lr: 1.0000e-04\n",
            "Epoch 185/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4217 - val_loss: 2.4444 - lr: 1.0000e-04\n",
            "Epoch 186/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4158 - val_loss: 2.4149 - lr: 1.0000e-04\n",
            "Epoch 187/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4108 - val_loss: 2.4472 - lr: 1.0000e-04\n",
            "Epoch 188/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4146 - val_loss: 2.4374 - lr: 1.0000e-04\n",
            "Epoch 189/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4102 - val_loss: 2.4297 - lr: 1.0000e-04\n",
            "Epoch 190/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.4102 - val_loss: 2.4335 - lr: 1.0000e-04\n",
            "Epoch 191/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.4088 - val_loss: 2.4282 - lr: 1.0000e-04\n",
            "Epoch 192/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4129 - val_loss: 2.4575 - lr: 1.0000e-04\n",
            "Epoch 193/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4098 - val_loss: 2.4398 - lr: 1.0000e-04\n",
            "Epoch 194/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4083 - val_loss: 2.4520 - lr: 1.0000e-04\n",
            "Epoch 195/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4024 - val_loss: 2.4956 - lr: 1.0000e-04\n",
            "Epoch 196/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.4057 - val_loss: 2.4318 - lr: 1.0000e-04\n",
            "Epoch 197/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3535 - val_loss: 2.3840 - lr: 1.0000e-05\n",
            "Epoch 198/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3466 - val_loss: 2.3823 - lr: 1.0000e-05\n",
            "Epoch 199/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3449 - val_loss: 2.3824 - lr: 1.0000e-05\n",
            "Epoch 200/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3443 - val_loss: 2.3831 - lr: 1.0000e-05\n",
            "Epoch 201/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3443 - val_loss: 2.3821 - lr: 1.0000e-05\n",
            "Epoch 202/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3439 - val_loss: 2.3797 - lr: 1.0000e-05\n",
            "Epoch 203/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3433 - val_loss: 2.3844 - lr: 1.0000e-05\n",
            "Epoch 204/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3432 - val_loss: 2.3816 - lr: 1.0000e-05\n",
            "Epoch 205/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3427 - val_loss: 2.3814 - lr: 1.0000e-05\n",
            "Epoch 206/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3424 - val_loss: 2.3832 - lr: 1.0000e-05\n",
            "Epoch 207/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3430 - val_loss: 2.3804 - lr: 1.0000e-05\n",
            "Epoch 208/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3416 - val_loss: 2.3806 - lr: 1.0000e-05\n",
            "Epoch 209/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3415 - val_loss: 2.3844 - lr: 1.0000e-05\n",
            "Epoch 210/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3421 - val_loss: 2.3792 - lr: 1.0000e-05\n",
            "Epoch 211/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3411 - val_loss: 2.3803 - lr: 1.0000e-05\n",
            "Epoch 212/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3417 - val_loss: 2.3801 - lr: 1.0000e-05\n",
            "Epoch 213/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3412 - val_loss: 2.3786 - lr: 1.0000e-05\n",
            "Epoch 214/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3407 - val_loss: 2.3781 - lr: 1.0000e-05\n",
            "Epoch 215/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3403 - val_loss: 2.3792 - lr: 1.0000e-05\n",
            "Epoch 216/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3401 - val_loss: 2.3833 - lr: 1.0000e-05\n",
            "Epoch 217/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3401 - val_loss: 2.3775 - lr: 1.0000e-05\n",
            "Epoch 218/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3397 - val_loss: 2.3809 - lr: 1.0000e-05\n",
            "Epoch 219/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3398 - val_loss: 2.3779 - lr: 1.0000e-05\n",
            "Epoch 220/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3400 - val_loss: 2.3794 - lr: 1.0000e-05\n",
            "Epoch 221/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3390 - val_loss: 2.3789 - lr: 1.0000e-05\n",
            "Epoch 222/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3388 - val_loss: 2.3829 - lr: 1.0000e-05\n",
            "Epoch 223/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3394 - val_loss: 2.3795 - lr: 1.0000e-05\n",
            "Epoch 224/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3386 - val_loss: 2.3778 - lr: 1.0000e-05\n",
            "Epoch 225/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3387 - val_loss: 2.3778 - lr: 1.0000e-05\n",
            "Epoch 226/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3384 - val_loss: 2.3777 - lr: 1.0000e-05\n",
            "Epoch 227/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3381 - val_loss: 2.3794 - lr: 1.0000e-05\n",
            "Epoch 228/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3327 - val_loss: 2.3753 - lr: 1.0000e-06\n",
            "Epoch 229/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3315 - val_loss: 2.3742 - lr: 1.0000e-06\n",
            "Epoch 230/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3311 - val_loss: 2.3744 - lr: 1.0000e-06\n",
            "Epoch 231/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3312 - val_loss: 2.3744 - lr: 1.0000e-06\n",
            "Epoch 232/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3309 - val_loss: 2.3747 - lr: 1.0000e-06\n",
            "Epoch 233/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3309 - val_loss: 2.3743 - lr: 1.0000e-06\n",
            "Epoch 234/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3309 - val_loss: 2.3745 - lr: 1.0000e-06\n",
            "Epoch 235/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3308 - val_loss: 2.3739 - lr: 1.0000e-06\n",
            "Epoch 236/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3308 - val_loss: 2.3743 - lr: 1.0000e-06\n",
            "Epoch 237/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3308 - val_loss: 2.3742 - lr: 1.0000e-06\n",
            "Epoch 238/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3308 - val_loss: 2.3743 - lr: 1.0000e-06\n",
            "Epoch 239/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3308 - val_loss: 2.3742 - lr: 1.0000e-06\n",
            "Epoch 240/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3308 - val_loss: 2.3742 - lr: 1.0000e-06\n",
            "Epoch 241/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3306 - val_loss: 2.3743 - lr: 1.0000e-06\n",
            "Epoch 242/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3307 - val_loss: 2.3746 - lr: 1.0000e-06\n",
            "Epoch 243/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3306 - val_loss: 2.3751 - lr: 1.0000e-06\n",
            "Epoch 244/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3305 - val_loss: 2.3741 - lr: 1.0000e-06\n",
            "Epoch 245/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3306 - val_loss: 2.3744 - lr: 1.0000e-06\n",
            "Epoch 246/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3298 - val_loss: 2.3742 - lr: 1.0000e-07\n",
            "Epoch 247/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3297 - val_loss: 2.3742 - lr: 1.0000e-07\n",
            "Epoch 248/250\n",
            "506/506 [==============================] - 2s 5ms/step - loss: 2.3297 - val_loss: 2.3741 - lr: 1.0000e-07\n",
            "Epoch 249/250\n",
            "506/506 [==============================] - 3s 6ms/step - loss: 2.3297 - val_loss: 2.3741 - lr: 1.0000e-07\n",
            "Epoch 250/250\n",
            "506/506 [==============================] - 3s 5ms/step - loss: 2.3297 - val_loss: 2.3741 - lr: 1.0000e-07\n"
          ]
        }
      ],
      "source": [
        "history = model.fit(\n",
        "    x= train_X,\n",
        "    y= train_y,\n",
        "    batch_size=128,\n",
        "    epochs=250,\n",
        "    validation_data=(val_X, val_y),\n",
        "    callbacks=[\n",
        "        tf.keras.callbacks.ReduceLROnPlateau(), \n",
        "        callbacks\n",
        "    ])\n",
        "# I used 400 epochs (if you want you can change the number of epochs or you can edit the callback above)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "jaG3QjPWQXaM"
      },
      "outputs": [],
      "source": [
        "model.save(\"Num_Model_w_Scale.h5\")"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "XUW3b5LzyAfS",
        "boN4rE-3yRuz",
        "9gwB8zcVkzeB",
        "wIx1fmZ5mEWm",
        "s7ZRClKuKGAn",
        "6u4sxkTH7FJY",
        "lAqB3znqbnrj",
        "MzHR6JBp88YA",
        "-o8QC6kXAORZ",
        "OjBm4atL-i4i",
        "dlcliXVXAk9v"
      ],
      "machine_shape": "hm",
      "provenance": []
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3.8.13 ('queens_env': conda)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.13"
    },
    "vscode": {
      "interpreter": {
        "hash": "ec3470e261aaddc70b6811a38cd7e78303ef4d92564036abf92c3ba4e71aaee2"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
